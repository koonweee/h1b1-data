### This file was generated by Nexus Schema
### Do not make changes to this file directly


"""
The `BigInt` scalar type represents non-fractional signed whole numeric values.
"""
scalar BigInt

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar DateTime

type Employer {
  city: String!
  naicsCode: String!
  name: String!
  postalCode: String!
  state: String
  uuid: ID!
}

type LCADisclosure {
  beginDate: DateTime!
  caseNumber: ID!
  caseStatus: casestatus!
  decisionDate: DateTime!
  employer: Employer!
  fullTimePosition: Boolean!
  jobTitle: String
  prevailingWageRateOfPay: BigInt
  prevailingWageRateOfPayUnit: payunit
  receivedDate: DateTime!
  socCode: String!
  socJob: SOCJob!
  visaClass: visaclass!
  wageRateOfPayFrom: BigInt
  wageRateOfPayTo: BigInt
  wageRateOfPayUnit: payunit
  worksiteCity: String
  worksitePostalCode: String
  worksiteState: String
}

input LCADisclosureOrderByInput {
  beginDate: SortOrder
  decisionDate: SortOrder
  receivedDate: SortOrder
  wageRateOfPayFrom: SortOrder
}

type LCADisclosures {
  count: Int!
  items: [LCADisclosure!]!
}

type Query {
  employers(searchStr: String): [Employer!]!
  lcaDisclosures(
    """Filter for jobs with begin date less than or equal to this"""
    beginDateMax: DateTime

    """Filter for jobs with begin date greater than or equal to this"""
    beginDateMin: DateTime
    caseStatuses: [casestatus!]

    """Filter for jobs with decision date less than or equal to this"""
    decisionDateMax: DateTime

    """Filter for jobs with decision date greater than or equal to this"""
    decisionDateMin: DateTime

    """Filter for jobs with this exact employer city"""
    employerCities: [String!]

    """Filter for employers containing this string"""
    employerNameSearchStr: String

    """Filter for jobs with this exact employer state"""
    employerStates: [String!]

    """Filter for jobs with this exact employer UUID"""
    employerUuids: [String!]

    """Filter for jobs with this exact job SOC code"""
    jobSOCCodes: [String!]

    """Filter for job titles containing this string"""
    jobTitleSearchStr: String
    orderBy: [LCADisclosureOrderByInput!]

    """Number of records to skip"""
    skip: Int = 0

    """Number of records to take (max 500)"""
    take: Int = 50
    visaClasses: [visaclass!]

    """Filter for jobs with wage less than or equal to this"""
    wageMax: Int

    """Filter for jobs with wage greater than or equal to this"""
    wageMin: Int = 0
  ): LCADisclosures!
  socJobs: [SOCJob!]!
}

type SOCJob {
  code: ID!
  title: String!
}

enum SortOrder {
  asc
  desc
}

enum casestatus {
  Certified
  Certified___Withdrawn
  Denied
  Withdrawn
}

enum payunit {
  Bi_Weekly
  Hour
  Month
  Week
  Year
}

enum visaclass {
  E_3_Australian
  H_1B
  H_1B1_Chile
  H_1B1_Singapore
}