### This file was generated by Nexus Schema
### Do not make changes to this file directly


"""
The `BigInt` scalar type represents non-fractional signed whole numeric values.
"""
scalar BigInt

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar DateTime

type Employer {
  city: String!
  naicsCode: String!
  name: String!
  postalCode: String!
  state: String
  uuid: ID!
}

type LCADisclosure {
  beginDate: DateTime!
  caseNumber: ID!
  caseStatus: casestatus!
  decisionDate: DateTime!
  employer: Employer!
  fullTimePosition: Boolean!
  jobTitle: String
  prevailingWageRateOfPay: BigInt
  prevailingWageRateOfPayUnit: payunit
  receivedDate: DateTime!
  socCode: String!
  socJob: SOCJob!
  visaClass: visaclass!
  wageRateOfPayFrom: BigInt
  wageRateOfPayTo: BigInt
  wageRateOfPayUnit: payunit
  worksiteCity: String
  worksitePostalCode: String
  worksiteState: String
}

input LCADisclosureOrderByInput {
  beginDate: SortOrder
  decisionDate: SortOrder
  receivedDate: SortOrder
  wageRateOfPayFrom: SortOrder
}

type LCADisclosures {
  count: Int!
  items: [LCADisclosure!]!
}

type Query {
  employers(searchStr: String): [Employer!]!
  lcaDisclosures(jobTitleSearchStr: String, orderBy: [LCADisclosureOrderByInput!], skip: Int, take: Int = 50): LCADisclosures!
  socJobs: [SOCJob!]!
}

type SOCJob {
  code: ID!
  title: String!
}

enum SortOrder {
  asc
  desc
}

enum casestatus {
  Certified
  Certified___Withdrawn
  Denied
  Withdrawn
}

enum payunit {
  Bi_Weekly
  Hour
  Month
  Week
  Year
}

enum visaclass {
  E_3_Australian
  H_1B
  H_1B1_Chile
  H_1B1_Singapore
}